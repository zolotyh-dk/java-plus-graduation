services:
  discovery-server:
    build: infra/discovery-server
    container_name: discovery-server
    restart: on-failure
    ports:
      - "8761:8761"
    networks:
      - ewm-net
    healthcheck:
      test: "curl --fail --silent discovery-server:8761/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 20s
      retries: 5

  config-server:
    build: infra/config-server
    container_name: config-server
    restart: on-failure
    ports:
      - "9091:9091"
    depends_on:
      discovery-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=9091
    healthcheck:
      test: "curl --fail --silent config-server:9091/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 30s
      retries: 5

  gateway-server:
    build: infra/gateway-server
    container_name: gateway-server
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      config-server:
        condition: service_healthy
      event-service:
        condition: service_healthy
      user-service:
        condition: service_healthy
      request-service:
        condition: service_healthy
      collector:
        condition: service_healthy
      aggregator:
        condition: service_healthy
      analyzer:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/

  event-service:
    build: core/event-service
    container_name: event-service
    restart: on-failure
    depends_on:
      event-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      collector:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://event-db:5432/events
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  event-db:
    image: postgres:16.1
    container_name: event-db
    restart: on-failure
    networks:
      - ewm-net
    environment:
      - POSTGRES_DB=events
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    volumes:
      - event_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 15

  user-service:
    build: core/user-service
    container_name: user-service
    restart: on-failure
    depends_on:
      users-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://users-db:5432/users
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  users-db:
    image: postgres:16.1
    container_name: users-db
    restart: on-failure
    environment:
      - POSTGRES_DB=users
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    networks:
      - ewm-net
    volumes:
      - user_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 10

  request-service:
    build: core/request-service
    container_name: request-service
    restart: on-failure
    depends_on:
      request-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      collector:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://request-db:5432/requests
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  request-db:
    image: postgres:16.1
    container_name: request-db
    restart: on-failure
    environment:
      - POSTGRES_DB=requests
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    networks:
      - ewm-net
    volumes:
      - request_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 10

  subscription-service:
    build: core/subscription-service
    container_name: subscription-service
    restart: on-failure
    depends_on:
      subscription-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://subscription-db:5432/subscriptions
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  subscription-db:
    image: postgres:16.1
    container_name: subscription-db
    restart: on-failure
    environment:
      - POSTGRES_DB=subscriptions
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    networks:
      - ewm-net
    volumes:
      - subscription_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 10

  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # for client connections
      - "29092:29092"
    restart: unless-stopped
    networks:
      - ewm-net
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 10

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - ewm-net
    command: "bash -c \
                'kafka-topics --create --topic stats.user-actions.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic stats.events-similarity.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092'"
    init: true

  collector:
    build: stats/collector
    container_name: collector
    restart: on-failure
    depends_on:
      config-server:
        condition: service_healthy
      kafka-init-topics:
        condition: service_completed_successfully
      aggregator:
        condition: service_healthy
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  aggregator:
    build: stats/aggregator
    container_name: aggregator
    restart: on-failure
    depends_on:
      config-server:
        condition: service_healthy
      kafka-init-topics:
        condition: service_completed_successfully
    networks:
      - ewm-net
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  analyzer:
    build: stats/analyzer
    container_name: analyzer
    restart: on-failure
    depends_on:
      analyzer-db:
        condition: service_healthy
      config-server:
        condition: service_healthy
      kafka-init-topics:
        condition: service_completed_successfully
    networks:
      - ewm-net
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://analyzer-db:5432/analyzer
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://discovery-server:8761/eureka/
      - SERVER_PORT=8080
    healthcheck:
      test: "curl --fail --silent localhost:8080/actuator/health | grep UP || exit 1"
      timeout: 5s
      interval: 25s
      retries: 10

  analyzer-db:
    image: postgres:16.1
    container_name: analyzer-db
    restart: on-failure
    environment:
      - POSTGRES_DB=analyzer
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    networks:
      - ewm-net
    volumes:
      - analyzer_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 10s
      retries: 10

networks:
  ewm-net:

volumes:
  event_data:
  user_data:
  request_data:
  subscription_data:
  analyzer_data: